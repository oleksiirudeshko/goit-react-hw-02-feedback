{"version":3,"sources":["components/Section.js","components/Feedback/FeedbackOptions.js","components/Statistics/Statistics.js","components/Notification.js","components/App.js","index.js"],"names":["Section","title","children","defaultProps","FeedbackOptions","onLeaveFeedback","type","onClick","Statistics","good","neutral","bad","total","positivePercentage","Notification","message","App","state","hendleFeedback","field","target","textContent","setState","prevState","IsShowNotification","this","feedback","Math","round","Component","ReactDOM","render","document","querySelector"],"mappings":"wPAGA,SAASA,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,iCACE,4BAAKD,GACJC,GAKPF,EAAQG,aAAe,CACrBF,MAAO,IAMMD,QCEAI,EAlBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,gBAAH,OACtB,oCACE,4BAAQC,KAAK,SAASC,QAASF,GAA/B,QAGA,4BAAQC,KAAK,SAASC,QAASF,GAA/B,WAGA,4BAAQC,KAAK,SAASC,QAASF,GAA/B,SCWWG,EAnBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,yCAEE,qCAAWJ,GACX,wCAAcC,GACd,oCAAUC,GACV,sCAAYC,GACZ,kDAAwBC,EAAxB,QCDWC,EANM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,2BAAIA,ICIrBC,E,4MACnBC,MAAQ,CACNR,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPO,eAAiB,YAAiB,IAC1BC,EADyB,EAAbC,OACGC,YACrB,EAAKC,UAAS,SAAAC,GACZ,OAAO,eACJJ,EAAQI,EAAUJ,GAAS,O,uDAKxB,IAIJK,EAJG,EACwBC,KAAKR,MAA5BR,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjBC,EAAQH,EAAOC,EAAUC,EACzBe,EAAWC,KAAKC,MAAOnB,EAAOG,EAAS,KAM7C,OAJc,IAAVA,IACFY,GAAqB,GAIrB,6BACE,kBAAC,EAAD,CAASvB,MAAM,yBACb,kBAAC,EAAD,CAAiBI,gBAAiBoB,KAAKP,kBAGzC,kBAAC,EAAD,KACGN,EAAQ,GACP,kBAAC,EAAD,CACEH,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBa,IAGvBF,GAAsB,kBAAC,EAAD,CAAcT,QAAQ,4B,GAzCtBc,aCFjCC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,W","file":"static/js/main.d899b739.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Section({ title, children }) {\n  return (\n    <section>\n      <h2>{title}</h2>\n      {children}\n    </section>\n  );\n}\n\nSection.defaultProps = {\n  title: '',\n};\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\nexport default Section;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst FeedbackOptions = ({ onLeaveFeedback }) => (\n  <>\n    <button type='button' onClick={onLeaveFeedback}>\n      good\n    </button>\n    <button type='button' onClick={onLeaveFeedback}>\n      neutral\n    </button>\n    <button type='button' onClick={onLeaveFeedback}>\n      bad\n    </button>\n  </>\n);\n\nFeedbackOptions.propTypes = {\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\n  <ul>\n    Statistics\n    <li>Good: {good}</li>\n    <li>Neutral: {neutral}</li>\n    <li>Bad: {bad}</li>\n    <li>Total: {total}</li>\n    <li>Positive feedback: {positivePercentage} %</li>\n  </ul>\n);\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => <p>{message}</p>;\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React, { Component } from 'react';\n\nimport Section from './Section';\nimport FeedbackOptions from './Feedback/FeedbackOptions';\nimport Statistics from './Statistics/Statistics';\nimport Notification from './Notification';\n\nexport default class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  hendleFeedback = ({ target }) => {\n    const field = target.textContent;\n    this.setState(prevState => {\n      return {\n        [field]: prevState[field] + 1,\n      };\n    });\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const total = good + neutral + bad;\n    const feedback = Math.round((good / total) * 100);\n    let IsShowNotification;\n    if (total === 0) {\n      IsShowNotification = true;\n    }\n\n    return (\n      <div>\n        <Section title='Please leave feedback'>\n          <FeedbackOptions onLeaveFeedback={this.hendleFeedback} />\n        </Section>\n\n        <Section>\n          {total > 0 && (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              positivePercentage={feedback}\n            />\n          )}\n          {IsShowNotification && <Notification message='No feedback given' />}\n        </Section>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}